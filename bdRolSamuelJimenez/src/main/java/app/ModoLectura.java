/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app;

import controladores.JugadoresJpaController;
import controladores.PersonajesJpaController;
import controladores.UsuariosJpaController;
import entidades.Jugadores;
import entidades.Personajes;
import entidades.Usuarios;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sajm <sjimmaz322 at sjimmaz322@g.educaand.es>
 */
public class ModoLectura extends javax.swing.JFrame {
    
    UsuariosJpaController ujc = new UsuariosJpaController();
    JugadoresJpaController jjc = new JugadoresJpaController();
    PersonajesJpaController pjc = new PersonajesJpaController();

    /**
     * Creates new form ModoLectura
     */
    public ModoLectura() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rUser = new javax.swing.JRadioButton();
        rPlay = new javax.swing.JRadioButton();
        rPJ = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaContenidos = new javax.swing.JTable();
        btnDetalles = new javax.swing.JButton();
        FONDO = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CONSULTA DE DATOS");
        setLocation(new java.awt.Point(500, 200));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rUser.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        rUser.setForeground(new java.awt.Color(0, 0, 0));
        rUser.setText("Usuarios");
        rUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        rUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rUserActionPerformed(evt);
            }
        });
        getContentPane().add(rUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 80, -1, -1));

        rPlay.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        rPlay.setForeground(new java.awt.Color(0, 0, 0));
        rPlay.setText("Jugadores");
        rPlay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        rPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rPlayActionPerformed(evt);
            }
        });
        getContentPane().add(rPlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, -1));

        rPJ.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        rPJ.setForeground(new java.awt.Color(0, 0, 0));
        rPJ.setText("Personajes");
        rPJ.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        rPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rPJActionPerformed(evt);
            }
        });
        getContentPane().add(rPJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 80, -1, -1));

        tablaContenidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaContenidos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 175, 730, 228));

        btnDetalles.setText("DETALLES");
        btnDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetallesActionPerformed(evt);
            }
        });
        getContentPane().add(btnDetalles, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 450, -1, -1));

        FONDO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondoAdministrar.jpg"))); // NOI18N
        getContentPane().add(FONDO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rUserActionPerformed
        // TODO add your handling code here:
        rPlay.setSelected(false);
        rPJ.setSelected(false);
        cargarDatos();
    }//GEN-LAST:event_rUserActionPerformed

    private void rPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rPlayActionPerformed
        // TODO add your handling code here:
        rPJ.setSelected(false);
        rUser.setSelected(false);
        cargarDatos();
    }//GEN-LAST:event_rPlayActionPerformed

    private void rPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rPJActionPerformed
        // TODO add your handling code here:
        rPlay.setSelected(false);
        rUser.setSelected(false);
        cargarDatos();
    }//GEN-LAST:event_rPJActionPerformed
    private void cargarDatos() {
        // TODO add your handling code here:
        DefaultTableModel dfm = new DefaultTableModel() {

            //Evitamos que las celdas sean modificables
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        if (rUser.isSelected()) {
            String[] cabecera = {"ID", "NOMBRE", "EDAD", "DIRECCIÓN", "FEC. CUMPLEAÑOS"};
            //Añadimos la cabecera a la tabla
            dfm.setColumnIdentifiers(cabecera);
            List<Usuarios> lista = ujc.findUsuariosEntities();
            if (!lista.isEmpty()) {
                for (Usuarios p : lista) {
                    
                    Object[] o = {p.getCodUsuario(), p.getNombre(), p.getEdad(), p.getDireccion(), p.getFecCumpleanios()};
                    
                    dfm.addRow(o);
                }
                tablaContenidos.setModel(dfm);
            }
            
        } else if (rPlay.isSelected()) {
            String[] cabecera = {"ID", "APODO", "SISTEMA", "ROL", "N. USUARIO"};
            //Añadimos la cabecera a la tabla
            dfm.setColumnIdentifiers(cabecera);
            List<Jugadores> lista = jjc.findJugadoresEntities();
            if (!lista.isEmpty()) {
                for (Jugadores p : lista) {
                    
                    Object[] o = {p.getId(), p.getApodo(), p.getSistemaPredilecto(), p.getRolPreferido(), p.getCodUsuario().getNombre()};
                    
                    dfm.addRow(o);
                }
                tablaContenidos.setModel(dfm);
            }
            
        } else if (rPJ.isSelected()) {
            String[] cabecera = {"ID", "NOMBRE", "ARQUETIPO", "NIVEL", "ALINEACION", "JUGADOR"};
            //Añadimos la cabecera a la tabla
            dfm.setColumnIdentifiers(cabecera);
            
            List<Personajes> pjs = pjc.findPersonajesEntities();
            for (Personajes p : pjs) {
                
                Object[] o = {p.getId(), p.getNombre(), p.getArquetipo(), p.getNivel(), p.getAlineacion(), p.getIdJugador().getApodo()};
                
                dfm.addRow(o);
            }
            tablaContenidos.setModel(dfm);
            
        } else {
            JOptionPane.showMessageDialog(null, "Elija una de las opciones proporcionadas");
        }
    }
    private void btnDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetallesActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada, valor;
        String mensaje;
        
        if (rUser.isSelected()) {
            filaSeleccionada = tablaContenidos.getSelectedRow();
            valor = (int) tablaContenidos.getValueAt(filaSeleccionada, 0);
            
            Usuarios u = ujc.findUsuarios(valor);
            
            mensaje = """
                    ---***---
                    USUARIO:
                    ---***---
                    Cód. Usuario:   %d
                    Nombre:         %s
                    Edad:           %d
                    Dirección:      %s
                    Cumpleaños:     %s
                    A.k.a:          %s
                    ---***---
                    """.formatted(u.getCodUsuario(),
                    u.getNombre(),
                    u.getEdad(),
                    u.getDireccion(),
                    utilidades.Utilidades.dateToLocal(u.getFecCumpleanios()).format(DateTimeFormatter.ofPattern("dd-MM-yyyy")),
                    u.getJugador().getApodo());
            JOptionPane.showMessageDialog(null, mensaje);
        } else if (rPlay.isSelected()) {
            filaSeleccionada = tablaContenidos.getSelectedRow();
            valor = (int) tablaContenidos.getValueAt(filaSeleccionada, 0);
            
            Jugadores j = jjc.findJugadores(valor);
            
            String listaPersonajes = toStringPersonajes(j);
            mensaje = """
                    ---***---
                      Jugador:
                    ---***---
                    Cód. Jugador:   %d
                    Apodo:          %s
                    Sistema:        %s
                    Rol:            %s
                    Nombre Real:    %s
                    Jugando a:
                    %s
                    ---***---
                    """.formatted(j.getId(),
                    j.getApodo(),
                    j.getSistemaPredilecto(),
                    j.getRolPreferido(),
                    j.getCodUsuario().getNombre(),
                    listaPersonajes);
            
            JOptionPane.showMessageDialog(null, mensaje);
        } else if (rPJ.isSelected()) {
            filaSeleccionada = tablaContenidos.getSelectedRow();
            valor = (int) tablaContenidos.getValueAt(filaSeleccionada, 0);
            
            Personajes p = pjc.findById(valor);
            
            mensaje = """
                    ---***---
                    Personaje:
                    ---***---
                    Cód. Personaje:   %d
                    Nombre:           %s
                    Arquetipo:        %s
                    Trasfondo:        %s
                    Nivel:            %d
                    Alineación:       %s
                    Jugador por:      %s
                    ---***---
                    """.formatted(p.getId(),
                    p.getNombre(),
                    p.getArquetipo(),
                    p.getTrasfondo(),
                    p.getNivel(),
                    p.getAlineacion(),
                    p.getIdJugador().getApodo());
            JOptionPane.showMessageDialog(null, mensaje);
        } else {
            JOptionPane.showMessageDialog(null, "Elija una de las opciones proporcionadas");
        }
    }//GEN-LAST:event_btnDetallesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModoLectura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModoLectura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModoLectura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModoLectura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModoLectura().setVisible(true);
            }
        });
    }
    
    private String toStringPersonajes(Jugadores j) {
        List<Personajes> lista = j.getPersonajesList();
        StringBuilder tmp = new StringBuilder();
        for (Personajes p : lista) {
            tmp.append("     ").append(p.getNombre()).append(".\n");
        }
        return tmp.toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FONDO;
    private javax.swing.JButton btnDetalles;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rPJ;
    private javax.swing.JRadioButton rPlay;
    private javax.swing.JRadioButton rUser;
    private javax.swing.JTable tablaContenidos;
    // End of variables declaration//GEN-END:variables
}
